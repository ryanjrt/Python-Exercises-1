import tkinter as tk
from tkinter import messagebox

class TicTacToe:
    def __init__(self):
        self.window = tk.Tk()
        self.window.title("Tic Tac Toe")
        
        # Game state variables
        self.current_player = "X"
        self.board = [""] * 9
        self.game_active = True
        
        # Create status label
        self.status_label = tk.Label(
            self.window,
            text=f"Player {self.current_player}'s turn",
            font=('Arial', 15)
        )
        self.status_label.grid(row=0, column=0, columnspan=3, pady=10)
        
        # Create buttons
        self.buttons = []
        for i in range(3):
            for j in range(3):
                button = tk.Button(
                    self.window,
                    text="",
                    font=('Arial', 20),
                    width=6,
                    height=2,
                    command=lambda row=i, col=j: self.button_click(row, col)
                )
                button.grid(row=i+1, column=j, padx=5, pady=5)
                self.buttons.append(button)
        
        # Create restart button
        self.restart_button = tk.Button(
            self.window,
            text="Restart Game",
            font=('Arial', 12),
            command=self.restart_game
        )
        self.restart_button.grid(row=4, column=0, columnspan=3, pady=10)

    def button_click(self, row, col):
        index = row * 3 + col
        if self.board[index] == "" and self.game_active:
            self.board[index] = self.current_player
            self.buttons[index].config(text=self.current_player)
            
            if self.check_winner():
                self.highlight_winner()
                self.status_label.config(text=f"Player {self.current_player} wins!")
                self.game_active = False
            elif "" not in self.board:
                self.highlight_tie()
                self.status_label.config(text="It's a tie!")
                self.game_active = False
            else:
                self.current_player = "O" if self.current_player == "X" else "X"
                self.status_label.config(text=f"Player {self.current_player}'s turn")

    def check_winner(self):
        # Winning combinations
        combinations = [
            [0, 1, 2], [3, 4, 5], [6, 7, 8],  # Rows
            [0, 3, 6], [1, 4, 7], [2, 5, 8],  # Columns
            [0, 4, 8], [2, 4, 6]  # Diagonals
        ]
        
        for combo in combinations:
            if (self.board[combo[0]] == self.board[combo[1]] == 
                self.board[combo[2]] != ""):
                self.winning_combo = combo
                return True
        return False

    def highlight_winner(self):
        for index in self.winning_combo:
            self.buttons[index].config(bg='light green')

    def highlight_tie(self):
        for button in self.buttons:
            button.config(bg='yellow')

    def restart_game(self):
        # Reset game state
        self.current_player = "X"
        self.board = [""] * 9
        self.game_active = True
        
        # Reset buttons
        for button in self.buttons:
            button.config(text="", bg='SystemButtonFace')
        
        # Reset status
        self.status_label.config(text=f"Player {self.current_player}'s turn")

    def run(self):
        self.window.mainloop()

# Create and run the game
if __name__ == "__main__":
    game = TicTacToe()
    game.run()